library(arrow)
library(dplyr)
library(lubridate)
library(tidyr)
library(stringr)

### Parquet Files

base_url <- "https://blobs.duckdb.org/flight-data-partitioned/"

files <- paste0("Year=", 1995:2024, "/data_0.parquet")

for (dir in dirname(files)) dir.create(dir, showWarnings = FALSE)


out <- curl::multi_download(paste0(base_url, files), files, resume = TRUE)


### Dynamic code 

for (year in 2024:1995) {
  
  file_path <- paste0("Year=", year, "/data_0.parquet")
  
  flight_data <- read_parquet(file_path, 
                              col_select = c("Year", "Tail_Number", "CarrierDelay", "LateAircraftDelay", 
                                             "Cancelled", "CancellationCode", "AirTime", "Flights", "Distance"))
  MFR_trimmed <- MFR_master |>
    select(`N-NUMBER`, `YEAR MFR`, STATE, REGION, `TYPE AIRCRAFT`, `TYPE ENGINE`, `TYPE REGISTRANT`, `CERT ISSUE DATE`)
  ### Data frame code
  
  year_data <- flight_data |>
    filter(!is.na(Tail_Number) & Tail_Number != "") |>
    mutate(Tail_Number = str_remove(Tail_Number, "^-?N"), CARRIER_DELAY_30 = sum(!is.na(CarrierDelay) & CarrierDelay > 30),
           LATE_AIRCRAFT_DELAY_30 = sum(!is.na(LateAircraftDelay) & LateAircraftDelay > 30),) |>
    left_join(MFR_trimmed, by = c("Tail_Number" = "N-NUMBER")) |>
    mutate(AGE = if_else(is.na(`YEAR MFR`),
                         year - as.numeric(substr(`CERT ISSUE DATE`, 1, 4)),  # Use dynamic year
                         year - `YEAR MFR`)) |>
    group_by(Tail_Number) |>
    summarise(
      YEAR = first(Year),
      YEAR_MFR = first(`YEAR MFR`),
      AGE = first(AGE),
      AIR_TIME = sum(as.numeric(AirTime), na.rm = TRUE),
      FLIGHTS = sum(Flights),
      DISTANCE = sum(Distance),
      TOT_CARRIER_DELAY = sum(as.numeric(CarrierDelay), na.rm = TRUE),
      TOT_LATE_AIRCRAFT_DELAY = sum(as.numeric(LateAircraftDelay), na.rm = TRUE),
      COUNT_CARRIER_DELAY = sum(!is.na(CarrierDelay) & CarrierDelay > 0.1),
      COUNT_LATE_AIRCRAFT_DELAY = sum(!is.na(LateAircraftDelay) & LateAircraftDelay > 0.1),
      CARRIER_DELAY_30 = sum(as.numeric(CarrierDelay[!is.na(CarrierDelay) & as.numeric(CarrierDelay) > 30]), na.rm = TRUE),
      LATE_AIRCRAFT_DELAY_30 = sum(as.numeric(LateAircraftDelay[!is.na(LateAircraftDelay) & as.numeric(LateAircraftDelay) > 30]), na.rm = TRUE),
      COUNT_CARRIER_DELAY_30 = sum(!is.na(CarrierDelay) & CarrierDelay > 30),
      COUNT_LATE_AIRCRAFT_DELAY_30 = sum(!is.na(LateAircraftDelay) & LateAircraftDelay > 30),
      COUNT_CARRIER_CANCELLATION = sum(CancellationCode == "A", na.rm = TRUE),
      STATE = first(STATE),
      REGION = first(REGION),
      TYPE_AIRCRAFT = first(`TYPE AIRCRAFT`),
      TYPE_ENGINE = first(`TYPE ENGINE`),
      TYPE_REGISTRANT = first(`TYPE REGISTRANT`),
      .groups = "drop"
    )
  
  
  assign(paste0("Year_", year), year_data)
}

### Joining years

all_years <- list(
  Year_2024, Year_2023, Year_2022, Year_2021, Year_2020,
  Year_2019, Year_2018, Year_2017, Year_2016, Year_2015,
  Year_2014, Year_2013, Year_2012, Year_2011, Year_2010,
  Year_2009, Year_2008, Year_2007, Year_2006, Year_2005,
  Year_2004, Year_2003, Year_2002, Year_2001, Year_2000,
  Year_1999, Year_1998, Year_1997, Year_1996, Year_1995
)
ALL_YEARS <- bind_rows(all_years)
ALL_YEARS <- ALL_YEARS |>
  mutate(Tail_Number = trimws(as.character(Tail_Number))) |>
  arrange(Tail_Number, desc(YEAR)) |>
  filter(!is.na(AGE)) |>
  filter(AGE >= 0 | is.na(AGE)) |>
  filter(YEAR_MFR > 0) |>
  mutate(AVG_CARRIER_DELAY = TOT_CARRIER_DELAY / FLIGHTS)



Skys_The_Limit <- ALL_YEARS |>
  select(Tail_Number, YEAR, YEAR_MFR, AGE, AIR_TIME, FLIGHTS, DISTANCE, TOT_CARRIER_DELAY,
         TOT_LATE_AIRCRAFT_DELAY, COUNT_CARRIER_DELAY, COUNT_LATE_AIRCRAFT_DELAY, CARRIER_DELAY_30, LATE_AIRCRAFT_DELAY_30, 
         COUNT_CARRIER_DELAY_30, COUNT_LATE_AIRCRAFT_DELAY_30, 
         COUNT_CARRIER_CANCELLATION, STATE, REGION, TYPE_AIRCRAFT, TYPE_ENGINE, TYPE_REGISTRANT) |>
  arrange(Tail_Number, YEAR) |>  
  group_by(Tail_Number) |>       
  mutate(
    FLIGHTS_ANNUAL = FLIGHTS,
    AIR_TIME = cumsum(replace_na(AIR_TIME, 0)),
    FLIGHTS = cumsum(replace_na(FLIGHTS, 0)),
    DISTANCE = cumsum(replace_na(DISTANCE, 0))
  ) |>
  select(Tail_Number, YEAR, YEAR_MFR, AGE, AIR_TIME, FLIGHTS_ANNUAL, FLIGHTS, DISTANCE, TOT_CARRIER_DELAY,
         TOT_LATE_AIRCRAFT_DELAY, COUNT_CARRIER_DELAY, COUNT_LATE_AIRCRAFT_DELAY,  CARRIER_DELAY_30, LATE_AIRCRAFT_DELAY_30,
         COUNT_CARRIER_DELAY_30, COUNT_LATE_AIRCRAFT_DELAY_30,
         COUNT_CARRIER_CANCELLATION, STATE, REGION, TYPE_AIRCRAFT, TYPE_ENGINE, TYPE_REGISTRANT) |>
  ungroup()

post1995<- Skys_The_Limit |>
  group_by(Tail_Number) |>
  filter(YEAR_MFR >= 1995)


over5post1995 <- post1995 |>
  group_by(Tail_Number) |>
  filter(n() >= 5) |>
  filter(AIR_TIME > 1)|>
  ungroup()


Ratios_1 <- over5post1995 |>
  mutate(CARRIER_DELAY_30_RATIO = CARRIER_DELAY_30 / FLIGHTS_ANNUAL,
         COUNT_CARRIER_DELAY_30_RATIO = COUNT_CARRIER_DELAY_30 / FLIGHTS_ANNUAL,
         LATE_AIRCRAFT_DELAY_30_RATIO = LATE_AIRCRAFT_DELAY_30 / FLIGHTS_ANNUAL,
         COUNT_LATE_AIRCRAFT_DELAY_30_RATIO = COUNT_LATE_AIRCRAFT_DELAY_30/ FLIGHTS_ANNUAL,
         TOTAL_DELAY_RATE = (COUNT_CARRIER_DELAY_30 + COUNT_LATE_AIRCRAFT_DELAY_30)/FLIGHTS_ANNUAL)

Ratios_2 <- over5post1995 |>
  filter(FLIGHTS_ANNUAL > 25)|>
  mutate(CARRIER_DELAY_30_RATIO = CARRIER_DELAY_30 / FLIGHTS_ANNUAL,
         COUNT_CARRIER_DELAY_30_RATIO = COUNT_CARRIER_DELAY_30 / FLIGHTS_ANNUAL,
         LATE_AIRCRAFT_DELAY_30_RATIO = LATE_AIRCRAFT_DELAY_30 / FLIGHTS_ANNUAL,
         COUNT_LATE_AIRCRAFT_DELAY_30_RATIO = COUNT_LATE_AIRCRAFT_DELAY_30/ FLIGHTS_ANNUAL,
         TOTAL_DELAY_RATE = (COUNT_CARRIER_DELAY_30 + COUNT_LATE_AIRCRAFT_DELAY_30)/FLIGHTS_ANNUAL)        
